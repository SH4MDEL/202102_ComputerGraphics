//////////////////////////////////////////////////////////////////////////////////////////

모든 프로그램에 제시된 모든 기능 문제없이 작동합니다.

//////////////////////////////////////////////////////////////////////////////////////////
워밍업 프로그램 1


1. 명령어를 제시했을 때 2개의 행렬과 정답이 한줄에 한 행씩 깔끔하게 표시됩니다.

2. 모든 명령어는 4x4 행렬 계산 역시 지원합니다.

3. h 명령어를 한 번 더 실행할 경우 다시 3x3 행렬로 돌아가게 작성하였습니다.

//////////////////////////////////////////////////////////////////////////////////////////
워밍업 프로그램 2

파일 이름은 text.txt 입니다!

맨 마지막에 숫자도 따로 출력된답니다.

//////////////////////////////////////////////////////////////////////////////////////////
워밍업 프로그램 3

파일 이름은 text.txt 입니다!

1. 토글 키 입력 순서에 따라 결과값이 변하는 일은 없도록 제작하였습니다.
예를 들어 문장 뒤집기(d)를 실행한 후 별 삽입 명령어(e)를 실행하든
별 삽입을 먼저 하고 문장을 뒤집든 출력되는 값은 같습니다.

2. f 명령어는 e 명령어로 삽입된 문자(**)를 기준으로 문자 바꾸기를 실행합니다.
따라서 e 명령어를 실행하지 않으면 f 명령어를 실행할 수 없게 제작하였습니다.
반대로 f 명령어가 실행되어 있다면 e 명령어를 종료할 수 없습니다.

//////////////////////////////////////////////////////////////////////////////////////////
워밍업 프로그램 4

1. 기본 생성되는 사각형 및 직선의 좌표값은 50의 배수입니다. 
물론 (800, 600)을 넘어가는 값의 좌표는 설정되지 않습니다.

2. 입력 한번에 움직이는 좌표의 값은 50입니다.
이는 #define된 MOVEPOINT값을 수정하면 바꿀 수 있습니다.

3. 충돌하지 않았을 경우에도 충돌하지 않았다는 메시지가 출력됩니다.

4. q를 누르면 종료합니다.
//////////////////////////////////////////////////////////////////////////////////////////
워밍업 프로그램 5

구조체 말고 클래스로 제작하였습니다.

s: 원점과의 거리를 정렬하여 오름차순 (또는 내림차순)으로 정렬하여 출력한다. 
인덱스 0번부터 빈 칸없이 저장하여 출력한다. 
다시 s를 누르면 원래의 인덱스 위치에 출력한다.

'다시 s를 누르면 원래의 인덱스 위치에 출력한다' 라는 부분이 애매한게 있어서
저는 saving & sorting 기능으로 이해하였습니다.
즉 s를 누르면 현재의 상태를 저장하고 정렬
다시 s를 누르면 저장한 정보를 다시 호출.

따라서 첫 번째 s를 누른 다음 다른 작업을 하다 돌아와서 다시 s를 눌러도
첫 번째 s를 누를 당시의 리스트가 출력됩니다.

//////////////////////////////////////////////////////////////////////////////////////////
워밍업 프로그램 6

경로의 크기는 20x20으로 제작하였습니다.

완전 랜덤으로 움직이게 되면 숫자가 너무 커져서
아래 이동과 오른쪽 이동에 약간의 가중치를 주었습니다.
아래 또는 오른쪽이 걸릴 확률이 위 또는 왼쪽이 걸릴 확률보다 33% 높습니다.

동일한 확률로 구하고자 한다면 7번째 라인의		
std::uniform_int_distribution<int> dis(0, 6);	을
std::uniform_int_distribution<int> dis(0, 5);
로 바꾸시면 됩니다.
//////////////////////////////////////////////////////////////////////////////////////////